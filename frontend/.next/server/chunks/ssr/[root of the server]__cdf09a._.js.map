{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nikit/Downloads/supersoul/frontend/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nikit/Downloads/supersoul/frontend/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useState, useEffect, ReactNode, useContext } from \"react\";\r\nimport axios, { AxiosError } from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst api = axios.create({\r\n  baseURL:process.env.NEXT_PUBLIC_BACKEND_URL,\r\n  withCredentials: true,\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  const token = Cookies.get(\"token\");\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport { api };\r\n\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  setUser: (user: User | null) => void;\r\n  login: (identifier: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n}\r\n\r\nexport const AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const token = Cookies.get(\"token\");\r\n    if (token) {\r\n      api.get(\"/user\") \r\n        .then((res) => {\r\n          console.log(\"✅ User Data:\", res.data);\r\n          setUser(res.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"❌ Failed to fetch user:\", error.response?.data || error.message);\r\n          Cookies.remove(\"token\");\r\n          setUser(null);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const login = async (identifier: string, password: string) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"username\", identifier);\r\n      formData.append(\"password\", password);\r\n  \r\n      const res = await api.post(\"/token\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      const token = res.data.access_token;\r\n      Cookies.set(\"token\", token, { expires: 7 });\r\n\r\n      const userRes = await api.get(\"/user\");\r\n      setUser(userRes.data);\r\n      console.log(\"🔓 Logged in successfully!\", userRes.data);\r\n      router.push(\"/\");\r\n    } catch (error) {\r\n      const axiosError = error as AxiosError;\r\n      console.error(\"❌ Login Error:\", axiosError.response?.data || axiosError.message);\r\n      alert(\"Invalid credentials. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    Cookies.remove(\"token\");\r\n    setUser(null);\r\n    router.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for easier access to AuthContext\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;AAEA,MAAM,MAAM,0GAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,OAAO;IACP,iBAAiB;AACnB;AAEA,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC5B,MAAM,QAAQ,wHAAA,CAAA,UAAO,CAAC,GAAG,CAAC;IAC1B,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;IAClD;IACA,OAAO;AACT;;AAiBO,MAAM,4BAAc,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAA0B;AAE1D,MAAM,eAAe,CAAC,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ,wHAAA,CAAA,UAAO,CAAC,GAAG,CAAC;QAC1B,IAAI,OAAO;YACT,IAAI,GAAG,CAAC,SACL,IAAI,CAAC,CAAC;gBACL,QAAQ,GAAG,CAAC,gBAAgB,IAAI,IAAI;gBACpC,QAAQ,IAAI,IAAI;YAClB,GACC,KAAK,CAAC,CAAC;gBACN,QAAQ,KAAK,CAAC,2BAA2B,MAAM,QAAQ,EAAE,QAAQ,MAAM,OAAO;gBAC9E,wHAAA,CAAA,UAAO,CAAC,MAAM,CAAC;gBACf,QAAQ;YACV;QACJ;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,YAAoB;QACvC,IAAI;YACF,MAAM,WAAW,IAAI;YACrB,SAAS,MAAM,CAAC,YAAY;YAC5B,SAAS,MAAM,CAAC,YAAY;YAE5B,MAAM,MAAM,MAAM,IAAI,IAAI,CAAC,UAAU,UAAU;gBAC7C,SAAS;oBAAE,gBAAgB;gBAAsB;YACnD;YAEA,MAAM,QAAQ,IAAI,IAAI,CAAC,YAAY;YACnC,wHAAA,CAAA,UAAO,CAAC,GAAG,CAAC,SAAS,OAAO;gBAAE,SAAS;YAAE;YAEzC,MAAM,UAAU,MAAM,IAAI,GAAG,CAAC;YAC9B,QAAQ,QAAQ,IAAI;YACpB,QAAQ,GAAG,CAAC,8BAA8B,QAAQ,IAAI;YACtD,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,MAAM,aAAa;YACnB,QAAQ,KAAK,CAAC,kBAAkB,WAAW,QAAQ,EAAE,QAAQ,WAAW,OAAO;YAC/E,MAAM;QACR;IACF;IAEA,MAAM,SAAS;QACb,wHAAA,CAAA,UAAO,CAAC,MAAM,CAAC;QACf,QAAQ;QACR,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,qKAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAS;YAAO;QAAO;kBACzD;;;;;;AAGP;AAGO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nikit/Downloads/supersoul/frontend/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\nimport { AuthProvider } from \"../context/AuthContext\";\nimport type { AppProps } from \"next/app\";\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return (\n    <AuthProvider>\n      <Component {...pageProps} />\n    </AuthProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;;;;;;AAGe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBACE,qKAAC,gHAAA,CAAA,eAAY;kBACX,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B"}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}